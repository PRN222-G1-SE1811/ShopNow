@using System.Globalization
@model ShopNow.Presentation.Models.ProductViewModel.ProductDetailViewModel

@{
	var index = 1;
	CultureInfo cul = CultureInfo.GetCultureInfo("vi-VN");
}

<!-- Shop Details Section Begin -->
<section class="shop-details">
	<div class="product__details__pic">
		<div class="container">
			<div class="row">
				<div class="col-lg-12">
					<div class="product__details__breadcrumb">
						<a asp-controller="Home" asp-action="Index">Home</a>
						<a asp-controller="Product" asp-action="Index">Shop</a>
						<span>Product Details</span>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-lg-3 col-md-3">
					<ul class="nav nav-tabs" role="tablist">
						@foreach (var p in Model.ProductDetailDTO.ProductVariants)
						{
							@foreach (var img in p.Images)
							{
								<li class="nav-item">
									<a class="nav-link @(index == 1 ? "active" : "")"
									   data-toggle="tab"
									   href="#tabs-@(index++)"
									   role="tab">
										<div class="product__thumb__pic set-bg"
											 data-setbg="@img"></div>
									</a>
								</li>
							}
						}
					</ul>
				</div>
				@{
					index = 1;
				}
				<div class="col-lg-6 col-md-9">
					<div class="tab-content">
						@foreach (var p in Model.ProductDetailDTO.ProductVariants)
						{
							@foreach (var img in p.Images)
							{
								<div class="tab-pane @(index == 1 ? "active" : "")" id="tabs-@(index++)" role="tabpanel">
									<div class="product__details__pic__item">
										<img src="@img" alt="" />
									</div>
								</div>
							}
						}
					</div>
				</div>
				@{
					index = 1;
				}
			</div>
		</div>
	</div>
	<div class="product__details__content">
		<div class="container">
			<div class="row d-flex justify-content-center">
				<div class="col-lg-8">
					<div class="product__details__text">
						<h4 id="product_name">@Model.ProductDetailDTO.Name</h4>
						<div class="rating">
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star-o"></i>
							<span> - 5 Reviews</span>
						</div>
						<h3 id="product_price">@Model.ProductDetailDTO.Price.ToString("#,### VND")</h3>
						<p>
							Coat with quilted lining and an adjustable hood. Featuring
							long sleeves with adjustable cuff tabs, adjustable asymmetric
							hem with elastic side tabs and a front zip fastening with
							placket.
						</p>
						<div class="product__details__option">
							<div class="product__details__option__color">
								<span>Color:</span>
								@foreach (var p in Model.ProductDetailDTO.ProductVariants)
								{
									<label style="background-color: @p.Color">
										<input onclick="selectColor(this)" type="radio" name="color" />
									</label>
								}
							</div>

						</div>
						<div class="product__details__cart__option">
							<div class="quantity">
								<div class="pro-qty">
									<input type="text" value="1" min="1" />
								</div>
							</div>
							<button onclick="buyNow()" class="primary-btn text-white">Buy Now</button>
						</div>
						<div class="product__details__btns__option">
							<a style="cursor: pointer" onclick="addToCart()"><i class="fa fa-cart-plus" aria-hidden="true"></i> Add to Cart</a>
							@* <a href="#"><i class="fa fa-exchange"></i> Add To Compare</a> *@
						</div>
						<div class="product__details__last__option">
							<h5><span>Guaranteed Safe Checkout</span></h5>
							<img width="100" src="https://cdn.haitrieu.com/wp-content/uploads/2022/10/Logo-VNPAY-QR-1.png" alt="" />
							<ul>
								@* <li><span>SKU:</span> </li> *@
								<li><span>Categories:</span> @Model.ProductDetailDTO.Category</li>
							</ul>
						</div>
					</div>
				</div>
			</div>
			<div class="row">
				<div class="col-lg-12">
					<div class="product__details__tab">
						<ul class="nav nav-tabs" role="tablist">
							<li class="nav-item">
								<a class="nav-link active"
								   data-toggle="tab"
								   href="#tabs-5"
								   role="tab">Description</a>
							</li>
							<li class="nav-item">
								<a class="nav-link"
								   data-toggle="tab"
								   href="#tabs-6"
								   role="tab">
									Customer Previews(5)
								</a>
							</li>
							<li class="nav-item">
								<a class="nav-link"
								   data-toggle="tab"
								   href="#tabs-7"
								   role="tab">
									Additional information
								</a>
							</li>
						</ul>
						<div class="tab-content">
							<div class="tab-pane active" id="tabs-5" role="tabpanel">
								<div class="product__details__tab__content">
									<p class="note">
										Nam tempus turpis at metus scelerisque placerat nulla
										deumantos solicitud felis. Pellentesque diam dolor,
										elementum etos lobortis des mollis ut risus. Sedcus
										faucibus an sullamcorper mattis drostique des commodo
										pharetras loremos.
									</p>
									<div class="product__details__tab__content__item">
										<h5>Products Infomation</h5>
										<p>
											A Pocket PC is a handheld computer, which features
											many of the same capabilities as a modern PC. These
											handy little devices allow individuals to retrieve and
											store e-mail messages, create a contact file,
											coordinate appointments, surf the internet, exchange
											text messages and more. Every product that is labeled
											as a Pocket PC must be accompanied with specific
											software to operate the unit and must feature a
											touchscreen and touchpad.
										</p>
										<p>
											As is the case with any new technology product, the
											cost of a Pocket PC was substantial during it’s early
											release. For approximately $700.00, consumers could
											purchase one of top-of-the-line Pocket PCs in 2003.
											These days, customers are finding that prices have
											become much more reasonable now that the newness is
											wearing off. For approximately $350.00, a new Pocket
											PC can now be purchased.
										</p>
									</div>
									<div class="product__details__tab__content__item">
										<h5>Material used</h5>
										<p>
											Polyester is deemed lower quality due to its none
											natural quality’s. Made from synthetic materials, not
											natural like wool. Polyester suits become creased
											easily and are known for not being breathable.
											Polyester suits tend to have a shine to them compared
											to wool and cotton suits, this can make the suit look
											cheap. The texture of velvet is luxurious and
											breathable. Velvet is a great choice for dinner party
											jacket and can be worn all year round.
										</p>
									</div>
								</div>
							</div>
							<div class="tab-pane" id="tabs-6" role="tabpanel">
								<div class="product__details__tab__content">
									<div class="product__details__tab__content__item">
										<h5>Products Infomation</h5>
										<p>
											A Pocket PC is a handheld computer, which features
											many of the same capabilities as a modern PC. These
											handy little devices allow individuals to retrieve and
											store e-mail messages, create a contact file,
											coordinate appointments, surf the internet, exchange
											text messages and more. Every product that is labeled
											as a Pocket PC must be accompanied with specific
											software to operate the unit and must feature a
											touchscreen and touchpad.
										</p>
										<p>
											As is the case with any new technology product, the
											cost of a Pocket PC was substantial during it’s early
											release. For approximately $700.00, consumers could
											purchase one of top-of-the-line Pocket PCs in 2003.
											These days, customers are finding that prices have
											become much more reasonable now that the newness is
											wearing off. For approximately $350.00, a new Pocket
											PC can now be purchased.
										</p>
									</div>
									<div class="product__details__tab__content__item">
										<h5>Material used</h5>
										<p>
											Polyester is deemed lower quality due to its none
											natural quality’s. Made from synthetic materials, not
											natural like wool. Polyester suits become creased
											easily and are known for not being breathable.
											Polyester suits tend to have a shine to them compared
											to wool and cotton suits, this can make the suit look
											cheap. The texture of velvet is luxurious and
											breathable. Velvet is a great choice for dinner party
											jacket and can be worn all year round.
										</p>
									</div>
								</div>
							</div>
							<div class="tab-pane" id="tabs-7" role="tabpanel">
								<div class="product__details__tab__content">
									<p class="note">
										Nam tempus turpis at metus scelerisque placerat nulla
										deumantos solicitud felis. Pellentesque diam dolor,
										elementum etos lobortis des mollis ut risus. Sedcus
										faucibus an sullamcorper mattis drostique des commodo
										pharetras loremos.
									</p>
									<div class="product__details__tab__content__item">
										<h5>Products Infomation</h5>
										<p>
											A Pocket PC is a handheld computer, which features
											many of the same capabilities as a modern PC. These
											handy little devices allow individuals to retrieve and
											store e-mail messages, create a contact file,
											coordinate appointments, surf the internet, exchange
											text messages and more. Every product that is labeled
											as a Pocket PC must be accompanied with specific
											software to operate the unit and must feature a
											touchscreen and touchpad.
										</p>
										<p>
											As is the case with any new technology product, the
											cost of a Pocket PC was substantial during it’s early
											release. For approximately $700.00, consumers could
											purchase one of top-of-the-line Pocket PCs in 2003.
											These days, customers are finding that prices have
											become much more reasonable now that the newness is
											wearing off. For approximately $350.00, a new Pocket
											PC can now be purchased.
										</p>
									</div>
									<div class="product__details__tab__content__item">
										<h5>Material used</h5>
										<p>
											Polyester is deemed lower quality due to its none
											natural quality’s. Made from synthetic materials, not
											natural like wool. Polyester suits become creased
											easily and are known for not being breathable.
											Polyester suits tend to have a shine to them compared
											to wool and cotton suits, this can make the suit look
											cheap. The texture of velvet is luxurious and
											breathable. Velvet is a great choice for dinner party
											jacket and can be worn all year round.
										</p>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>
<!-- Shop Details Section End -->
<!-- Related Section Begin -->
<section class="related spad">
	<div class="container">
		<div class="row">
			<div class="col-lg-12">
				<h3 class="related-title">Related Product</h3>
			</div>
		</div>
		<div class="row">
			<div class="col-lg-3 col-md-6 col-sm-6 col-sm-6">
				<div class="product__item">
					<div class="product__item__pic set-bg"
						 data-setbg="img/product/product-1.jpg">
						<span class="label">New</span>
						<ul class="product__hover">
							<li>
								<a href="#"><img src="img/icon/heart.png" alt="" /></a>
							</li>
							<li>
								<a href="#">
									<img src="img/icon/compare.png" alt="" />
									<span>Compare</span>
								</a>
							</li>
							<li>
								<a href="#"><img src="img/icon/search.png" alt="" /></a>
							</li>
						</ul>
					</div>
					<div class="product__item__text">
						<h6>Piqué Biker Jacket</h6>
						<a href="#" class="add-cart">+ Add To Cart</a>
						<div class="rating">
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
						</div>
						<h5>$67.24</h5>
						<div class="product__color__select">
							<label for="pc-1">
								<input type="radio" id="pc-1" />
							</label>
							<label class="active black" for="pc-2">
								<input type="radio" id="pc-2" />
							</label>
							<label class="grey" for="pc-3">
								<input type="radio" id="pc-3" />
							</label>
						</div>
					</div>
				</div>
			</div>
			<div class="col-lg-3 col-md-6 col-sm-6 col-sm-6">
				<div class="product__item">
					<div class="product__item__pic set-bg"
						 data-setbg="img/product/product-2.jpg">
						<ul class="product__hover">
							<li>
								<a href="#"><img src="img/icon/heart.png" alt="" /></a>
							</li>
							<li>
								<a href="#">
									<img src="img/icon/compare.png" alt="" />
									<span>Compare</span>
								</a>
							</li>
							<li>
								<a href="#"><img src="img/icon/search.png" alt="" /></a>
							</li>
						</ul>
					</div>
					<div class="product__item__text">
						<h6>Piqué Biker Jacket</h6>
						<a href="#" class="add-cart">+ Add To Cart</a>
						<div class="rating">
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
						</div>
						<h5>$67.24</h5>
						<div class="product__color__select">
							<label for="pc-4">
								<input type="radio" id="pc-4" />
							</label>
							<label class="active black" for="pc-5">
								<input type="radio" id="pc-5" />
							</label>
							<label class="grey" for="pc-6">
								<input type="radio" id="pc-6" />
							</label>
						</div>
					</div>
				</div>
			</div>
			<div class="col-lg-3 col-md-6 col-sm-6 col-sm-6">
				<div class="product__item sale">
					<div class="product__item__pic set-bg"
						 data-setbg="img/product/product-3.jpg">
						<span class="label">Sale</span>
						<ul class="product__hover">
							<li>
								<a href="#"><img src="img/icon/heart.png" alt="" /></a>
							</li>
							<li>
								<a href="#">
									<img src="img/icon/compare.png" alt="" />
									<span>Compare</span>
								</a>
							</li>
							<li>
								<a href="#"><img src="img/icon/search.png" alt="" /></a>
							</li>
						</ul>
					</div>
					<div class="product__item__text">
						<h6>Multi-pocket Chest Bag</h6>
						<a href="#" class="add-cart">+ Add To Cart</a>
						<div class="rating">
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star"></i>
							<i class="fa fa-star-o"></i>
						</div>
						<h5>$43.48</h5>
						<div class="product__color__select">
							<label for="pc-7">
								<input type="radio" id="pc-7" />
							</label>
							<label class="active black" for="pc-8">
								<input type="radio" id="pc-8" />
							</label>
							<label class="grey" for="pc-9">
								<input type="radio" id="pc-9" />
							</label>
						</div>
					</div>
				</div>
			</div>
			<div class="col-lg-3 col-md-6 col-sm-6 col-sm-6">
				<div class="product__item">
					<div class="product__item__pic set-bg"
						 data-setbg="img/product/product-4.jpg">
						<ul class="product__hover">
							<li>
								<a href="#"><img src="img/icon/heart.png" alt="" /></a>
							</li>
							<li>
								<a href="#">
									<img src="img/icon/compare.png" alt="" />
									<span>Compare</span>
								</a>
							</li>
							<li>
								<a href="#"><img src="img/icon/search.png" alt="" /></a>
							</li>
						</ul>
					</div>
					<div class="product__item__text">
						<h6>Diagonal Textured Cap</h6>
						<a href="#" class="add-cart">+ Add To Cart</a>
						<div class="rating">
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
							<i class="fa fa-star-o"></i>
						</div>
						<h5>$60.9</h5>
						<div class="product__color__select">
							<label for="pc-10">
								<input type="radio" id="pc-10" />
							</label>
							<label class="active black" for="pc-11">
								<input type="radio" id="pc-11" />
							</label>
							<label class="grey" for="pc-12">
								<input type="radio" id="pc-12" />
							</label>
						</div>
					</div>
				</div>
			</div>
		</div>
	</div>
</section>
<!-- Related Section End -->
@section Scripts {
	@{
		<script type="text/javascript">
			// Lấy dữ liệu từ Razor Model
			var mapColor = @Html.Raw(Json.Serialize(Model.ProductDetailDTO.ProductVariants));

			// Debugging: Log raw data in detail
			console.log("Dữ liệu gốc (chi tiết):", JSON.stringify(mapColor, null, 2));

			// Tạo Color Map
			var colorMap = {};
			var productVariantStock = {}; // Lưu trữ số lượng tồn kho của từng biến thể

			mapColor.forEach(p => {
				// Log each product variant for detailed inspection
				console.log("Processing Variant:", JSON.stringify(p, null, 2));

				// Tạo map màu và size
				if (!colorMap[p.color]) {
					colorMap[p.color] = { sizes: [] };
				}
				if (!colorMap[p.color].sizes.includes(p.size)) {
					colorMap[p.color].sizes.push(p.size);
				}

				// Lưu trữ số lượng tồn kho
				if (!productVariantStock[p.color]) {
					productVariantStock[p.color] = {};
				}

				// Thêm log để kiểm tra giá trị stockQuantity
				console.log(`Color: ${p.color}, Size: ${p.size}, Stock: ${p.quantity}`);

				// Xử lý trường hợp stockQuantity có thể là undefined
				productVariantStock[p.color][p.size] = p.quantity !== undefined
					? p.quantity
					: 0;
			});

			console.log("Color Map:", colorMap);
			console.log("Product Variant Stock:", productVariantStock);

			// Biến lưu màu và size đã chọn
			var selectedColor = null;
			var selectedSize = null;
			var selectedProductVariant = null;

			// Khi chọn màu
			function selectColor(colorElement) {
				// Loại bỏ class active khỏi tất cả các label màu
				document.querySelectorAll('.product__details__option__color label').forEach(label => {
					label.classList.remove('active');
				});

				// Thêm class active cho label màu được chọn
				colorElement.closest('label').classList.add('active');

				// Lấy màu từ style background-color của label
				selectedColor = colorElement.closest('label').style.backgroundColor;
				selectedSize = null; // Reset size khi chọn màu khác
				selectedProductVariant = null;

				console.log("Chọn màu:", selectedColor);

				// Hiển thị size cho màu đã chọn
				updateSizeOptions(selectedColor);
			}

			// Cập nhật các size có sẵn cho màu đã chọn
			function updateSizeOptions(color) {
				// Tìm mã màu phù hợp trong colorMap
				const matchedColor = Object.keys(colorMap).find(mapColor =>
					mapColor.toLowerCase() === color.toLowerCase()
				);

				// Lấy container size, nếu không tồn tại thì tạo mới
				let sizeContainer = document.querySelector('.product__details__option__size');
				if (!sizeContainer) {
					sizeContainer = document.createElement('div');
					sizeContainer.className = 'product__details__option__size';

					// Tìm vị trí để chèn container size
					const optionContainer = document.querySelector('.product__details__option');
					if (optionContainer) {
						optionContainer.appendChild(sizeContainer);
					} else {
						console.error('Không tìm thấy container để chèn size');
						return;
					}
				}

				// Xóa các size cũ
				sizeContainer.innerHTML = '<span>Size:</span>';

				// Nếu tìm thấy màu
				if (matchedColor) {
					// Tạo label size cho từng size có sẵn
					colorMap[matchedColor].sizes.forEach((size, index) => {
						// Kiểm tra số lượng tồn kho
						const stockQuantity = productVariantStock[matchedColor][size] || 0;

						const sizeLabel = document.createElement('label');
						sizeLabel.setAttribute('for', size.toLowerCase());
						sizeLabel.innerHTML = `
							<input type="radio" id="${size.toLowerCase()}" name="size"
								   onclick="selectSize('${size}')"
								   ${stockQuantity === 0 ? 'disabled' : ''}/>${size}
							${stockQuantity === 0 ? ' (Hết hàng)' : ''}
						`;

						// Đánh dấu size đầu tiên là active và có hàng
						if (index === 0 && stockQuantity > 0) {
							sizeLabel.classList.add('active');
							selectedSize = size;
						}

						sizeContainer.appendChild(sizeLabel);
					});
				}
			}

			// Khi chọn size
			function selectSize(size) {
				if (!selectedColor) {
					alert("Vui lòng chọn màu trước!");
					return;
				}

				// Tìm mã màu phù hợp trong colorMap
				const matchedColor = Object.keys(colorMap).find(mapColor =>
					mapColor.toLowerCase() === selectedColor.toLowerCase()
				);

				// Loại bỏ class active khỏi tất cả các label size
				const sizeLabels = document.querySelectorAll('.product__details__option__size label');
				sizeLabels.forEach(label => {
					label.classList.remove('active');
				});

				// Thêm class active cho label size được chọn
				const selectedSizeLabel = document.querySelector(`.product__details__option__size label[for="${size.toLowerCase()}"]`);
				if (selectedSizeLabel) {
					selectedSizeLabel.classList.add('active');
				}

				selectedSize = size;

				// Tìm product variant và set max quantity
				selectedProductVariant = mapColor.find(p =>
					p.color.toLowerCase() === matchedColor.toLowerCase() &&
					p.size === selectedSize
				);

				console.log(selectedProductVariant);

				// Set max quantity cho input
				const quantityInput = document.querySelector('.pro-qty input');
				if (quantityInput && selectedProductVariant) {
					const maxQuantity = selectedProductVariant.quantity || 1;
					quantityInput.setAttribute('max', maxQuantity);
					quantityInput.value = 1; // Reset về 1 khi chọn size mới
				}

				console.log("Chọn size:", selectedSize, "Số lượng tồn:", selectedProductVariant?.quantity || 0);
			}

			// Khi ấn "Add to Cart"
			function addToCart() {
				if (!selectedColor || !selectedSize) {
					toastr.error('Please select color and size!');
					return;
				}

				if (!selectedProductVariant) {
					toastr.error('Please select product!');
					return;
				}

				// Lấy số lượng từ input
				const quantityInput = document.querySelector('.pro-qty input');
				const quantity = parseInt(quantityInput.value) || 1;

				// Kiểm tra số lượng
				if (quantity > (selectedProductVariant.quantity || 0)) {
					toastr.error(`Only ${selectedProductVariant.quantity || 0} items left in stock!`);
					return;
				}

				console.log("Thêm vào giỏ hàng:", {
					productVariantId: selectedProductVariant.id,
					color: selectedColor,
					size: selectedSize,
					quantity: quantity
				});

				let priceElement = document.getElementById("product_price");
				let priceText = priceElement.textContent.trim(); // Get full text content
				let price = parseFloat(priceText.replace(/[^\d.]/g, ''));

				// Send to backend
				$.ajax({
					url: "/Cart/AddToCart",
					type: "POST",
					contentType: "application/json",
					data: JSON.stringify({
						// Wrap the item in the correct ViewModel structure
						Item: {
							productVariantId: selectedProductVariant.id,
							quantity: quantity,
							price: price
						}
					}),
					dataType: 'json',
					success: function(response) {
						toastr.success(response.message);
					},
					error: function(xhr, status, error) {
						console.error("Error details:", {
							status: xhr.status,
							responseText: xhr.responseText,
							error: error
						});
						toastr.error("An error occurred while adding to cart.");
					}
				});
			}

			// buy now
			function buyNow() {
				if (!selectedColor || !selectedSize) {
					toastr.error('Please select color and size!');
					return;
				}

				if (!selectedProductVariant) {
					alert("Please select size!");
					return;
				}

				// Lấy số lượng từ input
				const quantityInput = document.querySelector('.pro-qty input');
				const quantity = parseInt(quantityInput.value) || 1;

				// Kiểm tra số lượng
				if (quantity > (selectedProductVariant.quantity || 0)) {
					alert(`Only ${selectedProductVariant.quantity || 0} items left in stock!`);
					return;
				}

				console.log("Thêm vào giỏ hàng:", {
					productVariantId: selectedProductVariant.id,
					color: selectedColor,
					size: selectedSize,
					quantity: quantity
				});

				let priceElement = document.getElementById("product_price");
				let priceText = priceElement.textContent.trim(); // Get full text content
				let price = parseFloat(priceText.replace(/[^\d.]/g, ''));
				let productName = document.getElementById("product_name").innerText;
							console.log(JSON.stringify({
				Items: [
					{
						productVariantId: selectedProductVariant.id,
						productName: productName,
						quantity: quantity,
						price: price
					}
				]
			}));
				// Send to backend
				$.ajax({
					url: "/CheckOut/Index",
					type: "POST",
					contentType: "application/json",
					data: JSON.stringify({
						// Wrap the item in the correct ViewModel structure
						Items: [
							{
								ProductVariantId: selectedProductVariant.id,
								ProductName: productName,
								Quantity: quantity,
								Price: price
							}
						]
					}),
					dataType: 'json',
					success: function(response) {
						if(response.redirectUrl !== null) {
							window.location.href = response.redirectUrl;
						}
					},
					error: function(xhr, status, error) {
						console.error("Error details:", {
							status: xhr.status,
							responseText: xhr.responseText,
							error: error
						});
						toastr.error("An error occurred while buying.");
					}
				});
			}

			// Khởi tạo ban đầu nếu có màu được chọn sẵn
			document.addEventListener('DOMContentLoaded', () => {
				const initialColorInput = document.querySelector('.product__details__option__color input:checked');
				if (initialColorInput) {
					selectColor(initialColorInput);
				}

				// Thêm sự kiện cho nút tăng/giảm số lượng
				const quantityInput = document.querySelector('.pro-qty input');
				if (quantityInput) {
					quantityInput.addEventListener('change', function() {
						const max = parseInt(this.getAttribute('max')) || 1;
						const value = parseInt(this.value) || 1;

						// Giới hạn số lượng
						if (value > max) {
							this.value = max;
						} else if (value < 1) {
							this.value = 1;
						}
					});
				}
			});
		</script>

	}
}